// Code generated by sqlc. DO NOT EDIT.
// source: anime.sql

package db

import (
	"context"
	"database/sql"

	"github.com/lib/pq"
)

const createAnime = `-- name: CreateAnime :one
INSERT INTO anime (
    title,
    title_jp,
    type,
    source, 
    begin_date,
    end_date,
    genre,
    season,
    year,
    airing,
    current_status,
    num_episodes,
    episode_duration,
    broadcast_time,
    next_broadcast,
    score,
    scored_by,
    rank,
    popularity,
    favorites,
    image_url
) VALUES (
    $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21
) RETURNING title, title_jp, type, source, begin_date, end_date, genre, season, year, airing, current_status, num_episodes, episode_duration, broadcast_time, next_broadcast, score, scored_by, rank, popularity, favorites, image_url, id, created_at
`

type CreateAnimeParams struct {
	Title           sql.NullString  `json:"title"`
	TitleJp         sql.NullString  `json:"title_jp"`
	Type            sql.NullString  `json:"type"`
	Source          sql.NullString  `json:"source"`
	BeginDate       sql.NullString  `json:"begin_date"`
	EndDate         sql.NullString  `json:"end_date"`
	Genre           []string        `json:"genre"`
	Season          sql.NullString  `json:"season"`
	Year            sql.NullInt32   `json:"year"`
	Airing          sql.NullBool    `json:"airing"`
	CurrentStatus   sql.NullString  `json:"current_status"`
	NumEpisodes     sql.NullInt32   `json:"num_episodes"`
	EpisodeDuration sql.NullString  `json:"episode_duration"`
	BroadcastTime   sql.NullString  `json:"broadcast_time"`
	NextBroadcast   sql.NullString  `json:"next_broadcast"`
	Score           sql.NullFloat64 `json:"score"`
	ScoredBy        sql.NullInt32   `json:"scored_by"`
	Rank            sql.NullInt32   `json:"rank"`
	Popularity      sql.NullInt32   `json:"popularity"`
	Favorites       sql.NullInt32   `json:"favorites"`
	ImageUrl        sql.NullString  `json:"image_url"`
}

func (q *Queries) CreateAnime(ctx context.Context, arg CreateAnimeParams) (Anime, error) {
	row := q.db.QueryRowContext(ctx, createAnime,
		arg.Title,
		arg.TitleJp,
		arg.Type,
		arg.Source,
		arg.BeginDate,
		arg.EndDate,
		pq.Array(arg.Genre),
		arg.Season,
		arg.Year,
		arg.Airing,
		arg.CurrentStatus,
		arg.NumEpisodes,
		arg.EpisodeDuration,
		arg.BroadcastTime,
		arg.NextBroadcast,
		arg.Score,
		arg.ScoredBy,
		arg.Rank,
		arg.Popularity,
		arg.Favorites,
		arg.ImageUrl,
	)
	var i Anime
	err := row.Scan(
		&i.Title,
		&i.TitleJp,
		&i.Type,
		&i.Source,
		&i.BeginDate,
		&i.EndDate,
		pq.Array(&i.Genre),
		&i.Season,
		&i.Year,
		&i.Airing,
		&i.CurrentStatus,
		&i.NumEpisodes,
		&i.EpisodeDuration,
		&i.BroadcastTime,
		&i.NextBroadcast,
		&i.Score,
		&i.ScoredBy,
		&i.Rank,
		&i.Popularity,
		&i.Favorites,
		&i.ImageUrl,
		&i.ID,
		&i.CreatedAt,
	)
	return i, err
}
