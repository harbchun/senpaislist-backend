// Code generated by sqlc. DO NOT EDIT.
// source: anime.sql

package db

import (
	"context"

	"github.com/lib/pq"
)

const createAnime = `-- name: CreateAnime :one
INSERT INTO anime (
    title,
    title_jp,
    start_day,
    start_month,
    start_year,
    end_day,
    end_month,
    end_year,
    source, 
    studio,
    genres,
    rating,
    description,
    season,
    year,
    num_episodes,
    episode_duration,
    airing,
    current_status,
    next_broadcast,
    score,
    scored_by,
    rank,
    popularity,
    favorites,
    image_url
) VALUES (
    $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,
    $11,$12,$13,$14,$15,$16,$17,$18,$19,$20,
    $21,$22,$23,$24,$25,$26
) RETURNING title, title_jp, start_day, start_month, start_year, end_day, end_month, end_year, source, studio, genres, rating, description, season, year, num_episodes, episode_duration, airing, current_status, next_broadcast, score, scored_by, rank, popularity, favorites, image_url, id, created_at
`

type CreateAnimeParams struct {
	Title           string   `json:"title"`
	TitleJp         string   `json:"title_jp"`
	StartDay        int64    `json:"start_day"`
	StartMonth      int64    `json:"start_month"`
	StartYear       int64    `json:"start_year"`
	EndDay          int64    `json:"end_day"`
	EndMonth        int64    `json:"end_month"`
	EndYear         int64    `json:"end_year"`
	Source          string   `json:"source"`
	Studio          string   `json:"studio"`
	Genres          []string `json:"genres"`
	Rating          string   `json:"rating"`
	Description     string   `json:"description"`
	Season          string   `json:"season"`
	Year            string   `json:"year"`
	NumEpisodes     int64    `json:"num_episodes"`
	EpisodeDuration string   `json:"episode_duration"`
	Airing          bool     `json:"airing"`
	CurrentStatus   string   `json:"current_status"`
	NextBroadcast   string   `json:"next_broadcast"`
	Score           float64  `json:"score"`
	ScoredBy        int64    `json:"scored_by"`
	Rank            int64    `json:"rank"`
	Popularity      int64    `json:"popularity"`
	Favorites       int64    `json:"favorites"`
	ImageUrl        string   `json:"image_url"`
}

func (q *Queries) CreateAnime(ctx context.Context, arg CreateAnimeParams) (Anime, error) {
	row := q.db.QueryRowContext(ctx, createAnime,
		arg.Title,
		arg.TitleJp,
		arg.StartDay,
		arg.StartMonth,
		arg.StartYear,
		arg.EndDay,
		arg.EndMonth,
		arg.EndYear,
		arg.Source,
		arg.Studio,
		pq.Array(arg.Genres),
		arg.Rating,
		arg.Description,
		arg.Season,
		arg.Year,
		arg.NumEpisodes,
		arg.EpisodeDuration,
		arg.Airing,
		arg.CurrentStatus,
		arg.NextBroadcast,
		arg.Score,
		arg.ScoredBy,
		arg.Rank,
		arg.Popularity,
		arg.Favorites,
		arg.ImageUrl,
	)
	var i Anime
	err := row.Scan(
		&i.Title,
		&i.TitleJp,
		&i.StartDay,
		&i.StartMonth,
		&i.StartYear,
		&i.EndDay,
		&i.EndMonth,
		&i.EndYear,
		&i.Source,
		&i.Studio,
		pq.Array(&i.Genres),
		&i.Rating,
		&i.Description,
		&i.Season,
		&i.Year,
		&i.NumEpisodes,
		&i.EpisodeDuration,
		&i.Airing,
		&i.CurrentStatus,
		&i.NextBroadcast,
		&i.Score,
		&i.ScoredBy,
		&i.Rank,
		&i.Popularity,
		&i.Favorites,
		&i.ImageUrl,
		&i.ID,
		&i.CreatedAt,
	)
	return i, err
}
