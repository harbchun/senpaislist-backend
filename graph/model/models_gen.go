// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AiringInformation struct {
	AnimeID         string `json:"anime_id"`
	StartDay        int    `json:"start_day"`
	StartMonth      int    `json:"start_month"`
	StartYear       int    `json:"start_year"`
	Year            int    `json:"year"`
	Season          string `json:"season"`
	NumEpisodes     int    `json:"num_episodes"`
	EpisodeDuration int    `json:"episode_duration"`
	Airing          bool   `json:"airing"`
}

type AiringInformationsFilterInput struct {
	Year   *OperatorsIntInput    `json:"year"`
	Season *OperatorsStringInput `json:"season"`
}

type AiringInformationsSortInput struct {
	Year   *string `json:"year"`
	Season *string `json:"season"`
}

type Anime struct {
	ID                string             `json:"id"`
	Tid               int                `json:"tid"`
	Title             string             `json:"title"`
	TitleJp           string             `json:"title_jp"`
	Summary           string             `json:"summary"`
	Source            string             `json:"source"`
	Studio            string             `json:"studio"`
	ImageURL          string             `json:"image_url"`
	Statistic         *Statistic         `json:"statistic"`
	AiringInformation *AiringInformation `json:"airing_information"`
	AnimeGenres       []*AnimesGenres    `json:"anime_genres"`
}

type AnimeFilterInput struct {
	ID                 *OperatorsIDInput                `json:"id"`
	Title              *OperatorsStringInput            `json:"title"`
	TitleJp            *OperatorsStringInput            `json:"title_jp"`
	Tid                *OperatorsIDInput                `json:"tid"`
	Studio             *OperatorsStringInput            `json:"studio"`
	AnimeGenres        []*AnimesGenresFilterInput       `json:"anime_genres"`
	AiringInformations []*AiringInformationsFilterInput `json:"airing_informations"`
	Statistics         []*StatisticsSortInput           `json:"statistics"`
	And                []*AnimeFilterInput              `json:"_and"`
	Or                 []*AnimeFilterInput              `json:"_or"`
}

type AnimeGenresSortInput struct {
	Genre *string `json:"genre"`
}

type AnimeSortInput struct {
	Title              *string                      `json:"title"`
	TitleJp            *string                      `json:"title_jp"`
	AnimeGenres        *AnimeGenresSortInput        `json:"anime_genres"`
	Statistics         *StatisticsSortInput         `json:"statistics"`
	AiringInformations *AiringInformationsSortInput `json:"airing_informations"`
}

type AnimesGenres struct {
	AnimeID string `json:"anime_id"`
	Genre   string `json:"genre"`
}

type AnimesGenresFilterInput struct {
	AnimeID *OperatorsIDInput     `json:"anime_id"`
	Genre   *OperatorsStringInput `json:"genre"`
}

type Genre struct {
	Genre       string          `json:"genre"`
	AnimesGenre []*AnimesGenres `json:"animes_genre"`
}

type Season struct {
	ID     string `json:"id"`
	Season string `json:"season"`
}

type Statistic struct {
	AnimeID    string `json:"anime_id"`
	Score      int    `json:"score"`
	ScoredBy   int    `json:"scored_by"`
	Rank       int    `json:"rank"`
	Popularity int    `json:"popularity"`
	Favorites  int    `json:"favorites"`
	Rating     int    `json:"rating"`
}

type StatisticsSortInput struct {
	Popularity *string `json:"popularity"`
	Score      *string `json:"score"`
	Rank       *string `json:"rank"`
	Rating     *string `json:"rating"`
	Favorites  *string `json:"favorites"`
}

type Year struct {
	Year int `json:"year"`
}

type OperatorsIDInput struct {
	Eq  *string  `json:"_eq"`
	Neq *string  `json:"_neq"`
	In  []string `json:"_in"`
	Nin []string `json:"_nin"`
}

type OperatorsIntInput struct {
	Eq  *int  `json:"_eq"`
	Neq *int  `json:"_neq"`
	Gt  *int  `json:"_gt"`
	Gte *int  `json:"_gte"`
	Lt  *int  `json:"_lt"`
	Lte *int  `json:"_lte"`
	In  []int `json:"_in"`
	Nin []int `json:"_nin"`
}

type OperatorsStringInput struct {
	Eq  *string  `json:"_eq"`
	Neq *string  `json:"_neq"`
	In  []string `json:"_in"`
	Nin []string `json:"_nin"`
}
